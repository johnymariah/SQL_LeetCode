Select i.item_category,sum(o.quantity), EXTRACT(day FROM o.order_date) as "day"
from items i join orders o
on o.item_id = i.item_id
group by i.item_category,EXTRACT(day FROM o.order_date);

/* Write your PL/SQL query statement below */

select category,
NVL(MONDAY,0) as MONDAY,
NVL(TUESDAY,0) AS TUESDAY,
NVL(WEDNESDAY,0) AS WEDNESDAY,
NVL(THURSDAY,0) AS THURSDAY,
NVL(FRIDAY,0) AS FRIDAY,
NVL(SATURDAY,0) AS SATURDAY,
NVL(SUNDAY,0) AS SUNDAY
from (
select
    TRIM(TO_CHAR(O.order_date,'DAY')) as Day, 
    I.item_category as Category,
    O.quantity as quantity
from Orders O right join Items I
on O.item_id=I.item_id
    )
    PIVOT
    (
    sum(quantity)
    for Day in ('MONDAY' as MONDAY,'TUESDAY' AS TUESDAY,'WEDNESDAY' AS WEDNESDAY,'THURSDAY' AS THURSDAY,'FRIDAY' AS FRIDAY,'SATURDAY' AS SATURDAY,'SUNDAY' AS SUNDAY) 
    )
    order by category



Select
a.item_category as category,
sum(case when trim(to_char(b.order_date, 'day'))= 'monday' then (b.quantity) else 0 end) as Monday,
sum(case when trim(to_char(b.order_date, 'day'))= 'tuesday' then (b.quantity) else 0 end) as Tuesday,
sum(case when trim(to_char(b.order_date, 'day'))= 'wednesday' then (b.quantity) else 0 end) as Wednesday,
sum(case when trim(to_char(b.order_date, 'day'))= 'thursday' then (b.quantity) else 0 end) as Thursday,
sum(case when trim(to_char(b.order_date, 'day'))= 'friday' then (b.quantity) else 0 end) as Friday,
sum(case when trim(to_char(b.order_date, 'day'))= 'saturday' then (b.quantity) else 0 end) as Saturday,
sum(case when trim(to_char(b.order_date, 'day'))= 'sunday' then (b.quantity) else 0 end) as Sunday
from items a
left join orders b
on a.item_id = b.item_id
group by a.item_category
order by 1
