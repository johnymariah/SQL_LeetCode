with order_items as (
select
TRIM(to_char(O.order_date,'Day')) as Day, 
I.item_category as Category,
O.quantity as quantity
from Orders O right join Items I
on O.item_id=I.item_id)

select 
Category,
nvl(Monday,0) as Monday,
nvl(Tuesday,0) as Tuesday,
nvl(Wednesday,0) as Wednesday,
nvl(Thursday,0) as Thursday,
nvl(Friday,0) as Friday,
nvl(Saturday,0) as Saturday,
nvl(Sunday,0) as Sunday
from (order_items)
pivot(
sum(quantity)
for day
in (
    'Monday' as Monday,
    'Tuesday' as Tuesday,
    'Wednesday' as Wednesday,
    'Thursday' as Thursday,
    'Friday' as Friday,
    'Saturday' as Saturday,
    'Sunday' as Sunday
)
)
order by Category


#alternate solution



Select
a.item_category as category,
sum(case when trim(to_char(b.order_date, 'day'))= 'monday' then (b.quantity) else 0 end) as Monday,
sum(case when trim(to_char(b.order_date, 'day'))= 'tuesday' then (b.quantity) else 0 end) as Tuesday,
sum(case when trim(to_char(b.order_date, 'day'))= 'wednesday' then (b.quantity) else 0 end) as Wednesday,
sum(case when trim(to_char(b.order_date, 'day'))= 'thursday' then (b.quantity) else 0 end) as Thursday,
sum(case when trim(to_char(b.order_date, 'day'))= 'friday' then (b.quantity) else 0 end) as Friday,
sum(case when trim(to_char(b.order_date, 'day'))= 'saturday' then (b.quantity) else 0 end) as Saturday,
sum(case when trim(to_char(b.order_date, 'day'))= 'sunday' then (b.quantity) else 0 end) as Sunday
from items a
left join orders b
on a.item_id = b.item_id
group by a.item_category
order by 1
